{"version":3,"sources":["utils.re","index.re","App.re","game.re","Grid.re","SwipeZone.re","registerServiceWorker.js"],"names":["$$Array","__webpack_require__","Caml_array","render_list","of_list","$$TouchList","touchlist","caml_array_get","exports","render_string","prim","render_array","Env","App","ReactDOMRe","ReasonReact","RegisterServiceWorker","randomSeed","Date","now","renderToElementWithId","element","undefined","make","default","register_service_worker","Game","Grid","Block","Curry","Utils","React","Caml_obj","SwipeZone","Caml_option","empty_grid","component","reducerComponent","_children","on_keyup","$$event","self","key","_1","__","place_random_value","fill_random_empty_tile","maybe_place_value","grid","match","make_initial_state","param","handler","document","addEventListener","removeEventListener","tmp","createElement","className","onClick","onTouchEnd","direction","action","state","tag","cancelAnimationFrame","new_grid","merge","caml_equal","is_mergeable","match$2","best_move","direction$prime","valFromOption","List","Random","Pervasives","RList$Rationale","Function$Rationale","get_position","p","partial_arg","Infix","__x","nth","shift_zeroes","xs","partition","x","$at","find_zeroes","fold_lefti","acc","y","acc$prime","tile","get_columns","mapi","merge_row_right","_index","_ys","ys","index","match$1","d","c","b","a","partial_arg$1","rev","partial_arg$2","merge_row_left","merge_grid_right","map","merge_grid_left","partial_arg$3","partial_arg$4","partial_arg$5","update_grid","value","zero","old_row","new_row","update","get_score","get_valid_moves","filter","caml_notequal","grid$prime","zeroes","length","sort","partial_arg$6","partial_arg$7","partial_arg$8","partial_arg$9","partial_arg$10","length_diff","random_seed","init","position","empty_tiles","i","$$int","hd","direction_to_string","grid_to_matrix","matrix","make_matrix","iteri","caml_array_set","moves","len","statelessComponent","render_tiles","String","render_rows","row","data","status","_self","get_touch_position","touches","touch","screenX","screenY","touchRecorder","get_swipe_direction","touchStart","touchEnd","time_delta","get_swipe_speed","y_speed","x_speed","Math","abs","onSwipe","children","on_touch_start","targetTouches","on_touch_end","preventDefault","changedTouches","createDomElement","onTouchStart","r","__webpack_exports__","register","unregister","isLocalhost","Boolean","window","location","hostname","navigator","URL","process","origin","swUrl","concat","fetch","then","response","headers","get","indexOf","serviceWorker","ready","registration","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","error"],"mappings":"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","file":"static/js/main.3f4e03a9.chunk.js","sourcesContent":["// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE\n'use strict';\n\nvar $$Array = require(\"bs-platform/lib/js/array.js\");\nvar Caml_array = require(\"bs-platform/lib/js/caml_array.js\");\n\nfunction render_string(prim) {\n  return prim;\n}\n\nfunction render_array(prim) {\n  return prim;\n}\n\nvar render_list = $$Array.of_list;\n\nfunction hd(touchlist) {\n  return Caml_array.caml_array_get(touchlist, 0);\n}\n\nvar $$TouchList = /* module */[/* hd */hd];\n\nvar Env = /* module */[];\n\nexports.render_string = render_string;\nexports.render_array = render_array;\nexports.render_list = render_list;\nexports.$$TouchList = $$TouchList;\nexports.Env = Env;\n/* No side effect */\n","// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE\n'use strict';\n\nvar App = require(\"./App\");\nvar ReactDOMRe = require(\"reason-react/src/ReactDOMRe.js\");\nvar ReasonReact = require(\"reason-react/src/ReasonReact.js\");\nvar RegisterServiceWorker = require(\"./registerServiceWorker\");\n\n((require('./index.css')));\n\nfunction register_service_worker(prim) {\n  RegisterServiceWorker.default();\n  return /* () */0;\n}\n\nvar randomSeed = Date.now() | 0;\n\nReactDOMRe.renderToElementWithId(ReasonReact.element(undefined, undefined, App.make(randomSeed, /* array */[])), \"root\");\n\nRegisterServiceWorker.default();\n\nexports.register_service_worker = register_service_worker;\nexports.randomSeed = randomSeed;\n/*  Not a pure module */\n","// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE\n'use strict';\n\nvar Game = require(\"./game\");\nvar Grid = require(\"./Grid\");\nvar Block = require(\"bs-platform/lib/js/block.js\");\nvar Curry = require(\"bs-platform/lib/js/curry.js\");\nvar Utils = require(\"./utils\");\nvar React = require(\"react\");\nvar Caml_obj = require(\"bs-platform/lib/js/caml_obj.js\");\nvar SwipeZone = require(\"./SwipeZone\");\nvar Caml_option = require(\"bs-platform/lib/js/caml_option.js\");\nvar ReasonReact = require(\"reason-react/src/ReasonReact.js\");\n\nvar empty_grid = /* :: */[\n  /* :: */[\n    0,\n    /* :: */[\n      0,\n      /* :: */[\n        0,\n        /* :: */[\n          0,\n          /* [] */0\n        ]\n      ]\n    ]\n  ],\n  /* :: */[\n    /* :: */[\n      0,\n      /* :: */[\n        0,\n        /* :: */[\n          0,\n          /* :: */[\n            0,\n            /* [] */0\n          ]\n        ]\n      ]\n    ],\n    /* :: */[\n      /* :: */[\n        0,\n        /* :: */[\n          0,\n          /* :: */[\n            0,\n            /* :: */[\n              0,\n              /* [] */0\n            ]\n          ]\n        ]\n      ],\n      /* :: */[\n        /* :: */[\n          0,\n          /* :: */[\n            0,\n            /* :: */[\n              0,\n              /* :: */[\n                0,\n                /* [] */0\n              ]\n            ]\n          ]\n        ],\n        /* [] */0\n      ]\n    ]\n  ]\n];\n\nvar component = ReasonReact.reducerComponent(\"App\");\n\nfunction make(randomSeed, _children) {\n  var on_keyup = function ($$event, self) {\n    var match = $$event.key;\n    switch (match) {\n      case \"ArrowDown\" : \n          return Curry._1(self[/* send */3], /* Move */Block.__(0, [/* Down */3]));\n      case \"ArrowLeft\" : \n          return Curry._1(self[/* send */3], /* Move */Block.__(0, [/* Left */0]));\n      case \"ArrowRight\" : \n          return Curry._1(self[/* send */3], /* Move */Block.__(0, [/* Right */1]));\n      case \"ArrowUp\" : \n          return Curry._1(self[/* send */3], /* Move */Block.__(0, [/* Up */2]));\n      case \"q\" : \n          return Curry._1(self[/* send */3], /* Tick */0);\n      default:\n        return /* () */0;\n    }\n  };\n  var on_toggle_autoplay = function (param, self) {\n    var play = function (param) {\n      self[/* state */1][/* animationFrameId */3][0] = Caml_option.some(requestAnimationFrame(play));\n      return Curry._1(self[/* send */3], /* Tick */0);\n    };\n    var match = self[/* state */1][/* animationFrameId */3][0];\n    if (match !== undefined) {\n      return Curry._1(self[/* send */3], /* Stop */Block.__(1, [Caml_option.valFromOption(match)]));\n    } else {\n      play(0);\n      return Curry._1(self[/* send */3], /* Start */1);\n    }\n  };\n  var place_random_value = Game.fill_random_empty_tile(randomSeed);\n  var maybe_place_value = function (grid) {\n    var match = Curry._1(place_random_value, grid);\n    if (match !== undefined) {\n      return match;\n    } else {\n      return grid;\n    }\n  };\n  var make_initial_state = function (param) {\n    return /* record */[\n            /* grid */maybe_place_value(maybe_place_value(empty_grid)),\n            /* gameStatus : New */0,\n            /* isPlaying */false,\n            /* animationFrameId : record */[/* contents */undefined]\n          ];\n  };\n  return /* record */[\n          /* debugName */component[/* debugName */0],\n          /* reactClassInternal */component[/* reactClassInternal */1],\n          /* handedOffState */component[/* handedOffState */2],\n          /* willReceiveProps */component[/* willReceiveProps */3],\n          /* didMount */(function (self) {\n              var handler = Curry._1(self[/* handle */0], on_keyup);\n              document.addEventListener(\"keyup\", handler);\n              return Curry._1(self[/* onUnmount */4], (function (param) {\n                            document.removeEventListener(\"keyup\", handler);\n                            return /* () */0;\n                          }));\n            }),\n          /* didUpdate */component[/* didUpdate */5],\n          /* willUnmount */component[/* willUnmount */6],\n          /* willUpdate */component[/* willUpdate */7],\n          /* shouldUpdate */component[/* shouldUpdate */8],\n          /* render */(function (self) {\n              var match = process.env.NODE_ENV;\n              var tmp;\n              if (match === \"development\") {\n                var match$1 = self[/* state */1][/* isPlaying */2];\n                tmp = React.createElement(\"button\", {\n                      className: \"new-game\",\n                      onClick: Curry._1(self[/* handle */0], on_toggle_autoplay)\n                    }, Utils.render_string(match$1 ? \"Stop\" : \"Auto\"));\n              } else {\n                tmp = React.createElement(\"span\", undefined);\n              }\n              return React.createElement(\"div\", undefined, React.createElement(\"header\", undefined, React.createElement(\"h1\", {\n                                  className: \"heading\"\n                                }, Utils.render_string(\"2048 \"), React.createElement(\"span\", {\n                                      className: \"reason\"\n                                    }, React.createElement(\"span\", {\n                                          className: \"re\"\n                                        }, Utils.render_string(\"RE\")), Utils.render_string(\"ASONS\")))), React.createElement(\"div\", {\n                              className: \"controls\"\n                            }, tmp, React.createElement(\"button\", {\n                                  className: \"new-game\",\n                                  onClick: (function (param) {\n                                      return Curry._1(self[/* send */3], /* Reset */2);\n                                    }),\n                                  onTouchEnd: (function (param) {\n                                      return Curry._1(self[/* send */3], /* Reset */2);\n                                    })\n                                }, Utils.render_string(\"New Game\"))), ReasonReact.element(undefined, undefined, SwipeZone.make((function (direction) {\n                                    return Curry._1(self[/* send */3], /* Move */Block.__(0, [direction]));\n                                  }), /* array */[ReasonReact.element(undefined, undefined, Grid.make(self[/* state */1][/* grid */0], self[/* state */1][/* gameStatus */1], /* array */[]))])), React.createElement(\"section\", {\n                              className: \"hint\"\n                            }, Utils.render_string(\"use ←, ↑, → and ↓ to play\")));\n            }),\n          /* initialState */(function (param) {\n              return make_initial_state(/* () */0);\n            }),\n          /* retainedProps */component[/* retainedProps */11],\n          /* reducer */(function (action, state) {\n              if (typeof action === \"number\") {\n                switch (action) {\n                  case 0 : \n                      var direction = Game.best_move(state[/* grid */0]);\n                      if (direction !== undefined) {\n                        var direction$prime = direction;\n                        return /* SideEffects */Block.__(1, [(function (self) {\n                                      return Curry._1(self[/* send */3], /* Move */Block.__(0, [direction$prime]));\n                                    })]);\n                      } else {\n                        var match = state[/* animationFrameId */3][0];\n                        if (match !== undefined) {\n                          cancelAnimationFrame(Caml_option.valFromOption(match));\n                          return /* Update */Block.__(0, [/* record */[\n                                      /* grid */state[/* grid */0],\n                                      /* gameStatus : Lost */3,\n                                      /* isPlaying */false,\n                                      /* animationFrameId */state[/* animationFrameId */3]\n                                    ]]);\n                        } else {\n                          return /* Update */Block.__(0, [/* record */[\n                                      /* grid */state[/* grid */0],\n                                      /* gameStatus : Lost */3,\n                                      /* isPlaying */false,\n                                      /* animationFrameId */state[/* animationFrameId */3]\n                                    ]]);\n                        }\n                      }\n                  case 1 : \n                      return /* Update */Block.__(0, [/* record */[\n                                  /* grid */state[/* grid */0],\n                                  /* gameStatus */state[/* gameStatus */1],\n                                  /* isPlaying */true,\n                                  /* animationFrameId */state[/* animationFrameId */3]\n                                ]]);\n                  case 2 : \n                      return /* Update */Block.__(0, [make_initial_state(/* () */0)]);\n                  \n                }\n              } else if (action.tag) {\n                cancelAnimationFrame(action[0]);\n                return /* Update */Block.__(0, [/* record */[\n                            /* grid */state[/* grid */0],\n                            /* gameStatus */state[/* gameStatus */1],\n                            /* isPlaying */false,\n                            /* animationFrameId : record */[/* contents */undefined]\n                          ]]);\n              } else {\n                var new_grid = Game.merge(action[0])(state[/* grid */0]);\n                if (Caml_obj.caml_equal(new_grid, state[/* grid */0])) {\n                  var match$1 = Game.is_mergeable(new_grid);\n                  if (match$1) {\n                    return /* NoUpdate */0;\n                  } else {\n                    return /* Update */Block.__(0, [/* record */[\n                                /* grid */state[/* grid */0],\n                                /* gameStatus : Lost */3,\n                                /* isPlaying */state[/* isPlaying */2],\n                                /* animationFrameId */state[/* animationFrameId */3]\n                              ]]);\n                  }\n                } else {\n                  var match$2 = Curry._1(place_random_value, new_grid);\n                  if (match$2 !== undefined) {\n                    return /* Update */Block.__(0, [/* record */[\n                                /* grid */match$2,\n                                /* gameStatus */state[/* gameStatus */1],\n                                /* isPlaying */state[/* isPlaying */2],\n                                /* animationFrameId */state[/* animationFrameId */3]\n                              ]]);\n                  } else {\n                    return /* Update */Block.__(0, [/* record */[\n                                /* grid */state[/* grid */0],\n                                /* gameStatus : Lost */3,\n                                /* isPlaying */state[/* isPlaying */2],\n                                /* animationFrameId */state[/* animationFrameId */3]\n                              ]]);\n                  }\n                }\n              }\n            }),\n          /* jsElementWrapped */component[/* jsElementWrapped */13]\n        ];\n}\n\nexports.empty_grid = empty_grid;\nexports.component = component;\nexports.make = make;\n/* component Not a pure module */\n","// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE\n'use strict';\n\nvar List = require(\"bs-platform/lib/js/list.js\");\nvar $$Array = require(\"bs-platform/lib/js/array.js\");\nvar Random = require(\"bs-platform/lib/js/random.js\");\nvar Caml_obj = require(\"bs-platform/lib/js/caml_obj.js\");\nvar Caml_array = require(\"bs-platform/lib/js/caml_array.js\");\nvar Pervasives = require(\"bs-platform/lib/js/pervasives.js\");\nvar RList$Rationale = require(\"rationale/src/RList.js\");\nvar Function$Rationale = require(\"rationale/src/Function.js\");\n\nfunction length_diff(a, b) {\n  return List.length(a) - List.length(b) | 0;\n}\n\nfunction get_position(p) {\n  var partial_arg = Function$Rationale.Infix[/* ||> */1];\n  return (function (param) {\n      return partial_arg((function (__x) {\n                    return List.nth(__x, p[/* y */1]);\n                  }), (function (__x) {\n                    return List.nth(__x, p[/* x */0]);\n                  }), param);\n    });\n}\n\nfunction shift_zeroes(xs) {\n  var match = RList$Rationale.partition((function (x) {\n          return x !== 0;\n        }), xs);\n  return Pervasives.$at(match[1], match[0]);\n}\n\nfunction find_zeroes(param) {\n  return RList$Rationale.fold_lefti((function (acc, y) {\n                return (function (param) {\n                    return RList$Rationale.fold_lefti((function (acc$prime, x, tile) {\n                                  var match = tile === 0;\n                                  if (match) {\n                                    return Pervasives.$at(acc$prime, /* :: */[\n                                                /* record */[\n                                                  /* x */x,\n                                                  /* y */y\n                                                ],\n                                                /* [] */0\n                                              ]);\n                                  } else {\n                                    return acc$prime;\n                                  }\n                                }), acc, param);\n                  });\n              }), /* [] */0, param);\n}\n\nfunction get_columns(xs) {\n  return List.mapi((function (x) {\n                return (function (param) {\n                    return List.mapi((function (y, param) {\n                                  return get_position(/* record */[\n                                                /* x */x,\n                                                /* y */y\n                                              ])(xs);\n                                }), param);\n                  });\n              }), xs);\n}\n\nfunction merge_row_right(xs) {\n  var _index = 0;\n  var _ys = shift_zeroes(xs);\n  while(true) {\n    var ys = _ys;\n    var index = _index;\n    if (ys) {\n      var match = ys[1];\n      if (match) {\n        var match$1 = match[1];\n        if (match$1) {\n          var match$2 = match$1[1];\n          if (match$2 && !match$2[1]) {\n            var d = match$2[0];\n            var c = match$1[0];\n            var b = match[0];\n            var a = ys[0];\n            switch (index) {\n              case 0 : \n                  if (c === d) {\n                    _ys = /* :: */[\n                      0,\n                      /* :: */[\n                        a,\n                        /* :: */[\n                          b,\n                          /* :: */[\n                            (c << 1),\n                            /* [] */0\n                          ]\n                        ]\n                      ]\n                    ];\n                    _index = 1;\n                    continue ;\n                  } else {\n                    return ys;\n                  }\n              case 1 : \n                  if (b === c) {\n                    _ys = /* :: */[\n                      0,\n                      /* :: */[\n                        a,\n                        /* :: */[\n                          (b << 1),\n                          /* :: */[\n                            d,\n                            /* [] */0\n                          ]\n                        ]\n                      ]\n                    ];\n                    _index = 2;\n                    continue ;\n                  } else {\n                    return ys;\n                  }\n              case 2 : \n                  if (a === b) {\n                    _ys = /* :: */[\n                      0,\n                      /* :: */[\n                        (a << 1),\n                        /* :: */[\n                          c,\n                          /* :: */[\n                            d,\n                            /* [] */0\n                          ]\n                        ]\n                      ]\n                    ];\n                    _index = 3;\n                    continue ;\n                  } else {\n                    return ys;\n                  }\n              default:\n                return ys;\n            }\n          } else {\n            return ys;\n          }\n        } else {\n          return ys;\n        }\n      } else {\n        return ys;\n      }\n    } else {\n      return ys;\n    }\n  };\n}\n\nvar partial_arg = Function$Rationale.Infix[/* ||> */1];\n\nfunction partial_arg$1(param) {\n  return partial_arg(List.rev, merge_row_right, param);\n}\n\nvar partial_arg$2 = Function$Rationale.Infix[/* ||> */1];\n\nfunction merge_row_left(param) {\n  return partial_arg$2(partial_arg$1, List.rev, param);\n}\n\nfunction merge_grid_right(param) {\n  return List.map(merge_row_right, param);\n}\n\nfunction merge_grid_left(param) {\n  return List.map(merge_row_left, param);\n}\n\nfunction merge(direction) {\n  switch (direction) {\n    case 0 : \n        return merge_grid_left;\n    case 1 : \n        return merge_grid_right;\n    case 2 : \n        var partial_arg = Function$Rationale.Infix[/* ||> */1];\n        var partial_arg$1 = function (param) {\n          return partial_arg(get_columns, merge_grid_left, param);\n        };\n        var partial_arg$2 = Function$Rationale.Infix[/* ||> */1];\n        return (function (param) {\n            return partial_arg$2(partial_arg$1, get_columns, param);\n          });\n    case 3 : \n        var partial_arg$3 = Function$Rationale.Infix[/* ||> */1];\n        var partial_arg$4 = function (param) {\n          return partial_arg$3(get_columns, merge_grid_right, param);\n        };\n        var partial_arg$5 = Function$Rationale.Infix[/* ||> */1];\n        return (function (param) {\n            return partial_arg$5(partial_arg$4, get_columns, param);\n          });\n    \n  }\n}\n\nfunction update_grid(value, zero, grid) {\n  var old_row = List.nth(grid, zero[/* y */1]);\n  var new_row = RList$Rationale.update(value, zero[/* x */0], old_row);\n  return RList$Rationale.update(new_row, zero[/* y */1], grid);\n}\n\nfunction fill_random_empty_tile(random_seed) {\n  Random.init(random_seed);\n  return (function (grid) {\n      var empty_tiles = find_zeroes(grid);\n      var position;\n      if (empty_tiles) {\n        if (empty_tiles[1]) {\n          var i = Random.$$int(List.length(empty_tiles));\n          position = i !== 0 ? List.nth(empty_tiles, i - 1 | 0) : List.hd(empty_tiles);\n        } else {\n          position = empty_tiles[0];\n        }\n      } else {\n        position = undefined;\n      }\n      if (position !== undefined) {\n        var match = Random.$$int(100) < 90;\n        var new_tile_value = match ? 2 : 4;\n        return update_grid(new_tile_value, position, grid);\n      }\n      \n    });\n}\n\nfunction get_score(param) {\n  return RList$Rationale.fold_lefti((function (acc, param) {\n                return (function (param) {\n                    return RList$Rationale.fold_lefti((function (acc$prime, param, tile) {\n                                  return acc$prime + tile | 0;\n                                }), acc, param);\n                  });\n              }), 0, param);\n}\n\nfunction direction_to_string(direction) {\n  switch (direction) {\n    case 0 : \n        return \"left\";\n    case 1 : \n        return \"right\";\n    case 2 : \n        return \"up\";\n    case 3 : \n        return \"down\";\n    \n  }\n}\n\nfunction grid_to_matrix(grid) {\n  var matrix = $$Array.make_matrix(4, 4, 0);\n  List.iteri((function (y) {\n          return (function (param) {\n              return List.iteri((function (x, tile) {\n                            return Caml_array.caml_array_set(Caml_array.caml_array_get(matrix, y), x, tile);\n                          }), param);\n            });\n        }), grid);\n  return matrix;\n}\n\nfunction get_valid_moves(grid) {\n  return List.filter((function (x) {\n                  return Caml_obj.caml_notequal(x[/* grid */1], grid);\n                }))(List.map((function (direction) {\n                    var grid$prime = merge(direction)(grid);\n                    var zeroes = List.length(find_zeroes(grid$prime));\n                    return /* record */[\n                            /* direction */direction,\n                            /* grid */grid$prime,\n                            /* score */get_score(grid$prime),\n                            /* zeroes */zeroes\n                          ];\n                  }), /* :: */[\n                  /* Right */1,\n                  /* :: */[\n                    /* Up */2,\n                    /* :: */[\n                      /* Down */3,\n                      /* :: */[\n                        /* Left */0,\n                        /* [] */0\n                      ]\n                    ]\n                  ]\n                ]));\n}\n\nvar partial_arg$3 = Function$Rationale.Infix[/* ||> */1];\n\nfunction partial_arg$4(param) {\n  return partial_arg$3(get_valid_moves, (function (param) {\n                return List.sort((function (a, b) {\n                              return b[/* zeroes */3] - a[/* zeroes */3] | 0;\n                            }), param);\n              }), param);\n}\n\nvar partial_arg$5 = Function$Rationale.Infix[/* ||> */1];\n\nfunction partial_arg$6(param) {\n  return partial_arg$5(partial_arg$4, (function (param) {\n                return List.sort((function (a, b) {\n                              return b[/* score */2] - a[/* score */2] | 0;\n                            }), param);\n              }), param);\n}\n\nvar partial_arg$7 = Function$Rationale.Infix[/* ||> */1];\n\nfunction best_move(param) {\n  return partial_arg$7(partial_arg$6, (function (moves) {\n                var match = List.length(moves);\n                if (match !== 0) {\n                  return List.hd(moves)[/* direction */0];\n                }\n                \n              }), param);\n}\n\nvar partial_arg$8 = Function$Rationale.Infix[/* ||> */1];\n\nfunction partial_arg$9(param) {\n  return partial_arg$8(get_valid_moves, List.length, param);\n}\n\nvar partial_arg$10 = Function$Rationale.Infix[/* ||> */1];\n\nfunction is_mergeable(param) {\n  return partial_arg$10(partial_arg$9, (function (len) {\n                return len !== 0;\n              }), param);\n}\n\nexports.length_diff = length_diff;\nexports.get_position = get_position;\nexports.shift_zeroes = shift_zeroes;\nexports.find_zeroes = find_zeroes;\nexports.get_columns = get_columns;\nexports.merge_row_right = merge_row_right;\nexports.merge_row_left = merge_row_left;\nexports.merge_grid_right = merge_grid_right;\nexports.merge_grid_left = merge_grid_left;\nexports.merge = merge;\nexports.update_grid = update_grid;\nexports.fill_random_empty_tile = fill_random_empty_tile;\nexports.get_score = get_score;\nexports.direction_to_string = direction_to_string;\nexports.grid_to_matrix = grid_to_matrix;\nexports.get_valid_moves = get_valid_moves;\nexports.best_move = best_move;\nexports.is_mergeable = is_mergeable;\n/* RList-Rationale Not a pure module */\n","// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE\n'use strict';\n\nvar List = require(\"bs-platform/lib/js/list.js\");\nvar Utils = require(\"./utils\");\nvar React = require(\"react\");\nvar ReasonReact = require(\"reason-react/src/ReasonReact.js\");\nvar Function$Rationale = require(\"rationale/src/Function.js\");\n\n((require('./Grid.css')));\n\nvar component = ReasonReact.statelessComponent(\"Grid\");\n\nvar partial_arg = Function$Rationale.Infix[/* ||> */1];\n\nfunction render_tiles(param) {\n  return partial_arg((function (param) {\n                return List.mapi((function (x, tile) {\n                              var match = tile > 0;\n                              return React.createElement(\"div\", {\n                                          key: \"tile-\" + (String(x) + \"\"),\n                                          className: \"Grid-tile tile-\" + (String(tile) + \"\")\n                                        }, Utils.render_string(match ? String(tile) : \"\"));\n                            }), param);\n              }), Utils.render_list, param);\n}\n\nvar partial_arg$1 = Function$Rationale.Infix[/* ||> */1];\n\nfunction render_rows(param) {\n  return partial_arg$1((function (param) {\n                return List.mapi((function (y, row) {\n                              return React.createElement(\"div\", {\n                                          key: \"row-\" + (String(y) + \"\"),\n                                          className: \"Grid-row\"\n                                        }, render_tiles(row));\n                            }), param);\n              }), Utils.render_list, param);\n}\n\nfunction make(data, status, _children) {\n  return /* record */[\n          /* debugName */component[/* debugName */0],\n          /* reactClassInternal */component[/* reactClassInternal */1],\n          /* handedOffState */component[/* handedOffState */2],\n          /* willReceiveProps */component[/* willReceiveProps */3],\n          /* didMount */component[/* didMount */4],\n          /* didUpdate */component[/* didUpdate */5],\n          /* willUnmount */component[/* willUnmount */6],\n          /* willUpdate */component[/* willUpdate */7],\n          /* shouldUpdate */component[/* shouldUpdate */8],\n          /* render */(function (_self) {\n              return React.createElement(\"div\", {\n                          className: \"Grid-container\"\n                        }, React.createElement(\"div\", {\n                              className: \"Grid\"\n                            }, render_rows(data)), status !== 3 ? React.createElement(\"span\", undefined) : React.createElement(\"div\", {\n                                className: \"Grid-overlay\"\n                              }, React.createElement(\"div\", {\n                                    className: \"Grid-overlay-message\"\n                                  }, Utils.render_string(\"game over\"))));\n            }),\n          /* initialState */component[/* initialState */10],\n          /* retainedProps */component[/* retainedProps */11],\n          /* reducer */component[/* reducer */12],\n          /* jsElementWrapped */component[/* jsElementWrapped */13]\n        ];\n}\n\nexports.component = component;\nexports.render_tiles = render_tiles;\nexports.render_rows = render_rows;\nexports.make = make;\n/*  Not a pure module */\n","// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE\n'use strict';\n\nvar Curry = require(\"bs-platform/lib/js/curry.js\");\nvar Utils = require(\"./utils\");\nvar ReasonReact = require(\"reason-react/src/ReasonReact.js\");\n\nfunction get_touch_position(touches) {\n  var touch = Utils.$$TouchList[/* hd */0](touches);\n  return /* record */[\n          /* x */touch.screenX,\n          /* y */touch.screenY,\n          /* timestamp */Date.now()\n        ];\n}\n\nvar component = ReasonReact.statelessComponent(\"SwipeZone\");\n\nvar touchRecorder = /* record */[\n  /* touchStart : record */[\n    /* x */0.0,\n    /* y */0.0,\n    /* timestamp */0.0\n  ],\n  /* touchEnd : record */[\n    /* x */0.0,\n    /* y */0.0,\n    /* timestamp */0.0\n  ]\n];\n\nfunction get_swipe_direction(param) {\n  var touchStart = param[/* touchStart */0];\n  var touchEnd = param[/* touchEnd */1];\n  var time_delta = touchEnd[/* timestamp */2] - touchStart[/* timestamp */2];\n  var get_swipe_speed = function (a, b) {\n    return (a - b) * 10000.0 / time_delta;\n  };\n  var y_speed = get_swipe_speed(touchEnd[/* y */1], touchStart[/* y */1]);\n  var x_speed = get_swipe_speed(touchEnd[/* x */0], touchStart[/* x */0]);\n  var match = Math.abs(y_speed) > Math.abs(x_speed);\n  if (match) {\n    if (y_speed - 4000.0 > 0.0) {\n      return /* Down */3;\n    } else if (y_speed + 4000.0 < 0.0) {\n      return /* Up */2;\n    } else {\n      return undefined;\n    }\n  } else if (x_speed - 4000.0 > 0.0) {\n    return /* Right */1;\n  } else if (x_speed + 4000.0 < 0.0) {\n    return /* Left */0;\n  } else {\n    return undefined;\n  }\n}\n\nfunction make(onSwipe, children) {\n  var on_touch_start = function ($$event) {\n    touchRecorder[/* touchStart */0] = get_touch_position($$event.targetTouches);\n    return /* () */0;\n  };\n  var on_touch_end = function ($$event) {\n    $$event.preventDefault();\n    touchRecorder[/* touchEnd */1] = get_touch_position($$event.changedTouches);\n    var match = get_swipe_direction(touchRecorder);\n    if (match !== undefined) {\n      return Curry._1(onSwipe, match);\n    } else {\n      return /* () */0;\n    }\n  };\n  return /* record */[\n          /* debugName */component[/* debugName */0],\n          /* reactClassInternal */component[/* reactClassInternal */1],\n          /* handedOffState */component[/* handedOffState */2],\n          /* willReceiveProps */component[/* willReceiveProps */3],\n          /* didMount */component[/* didMount */4],\n          /* didUpdate */component[/* didUpdate */5],\n          /* willUnmount */component[/* willUnmount */6],\n          /* willUpdate */component[/* willUpdate */7],\n          /* shouldUpdate */component[/* shouldUpdate */8],\n          /* render */(function (_self) {\n              return ReasonReact.createDomElement(\"div\", {\n                          onTouchStart: on_touch_start,\n                          onTouchEnd: on_touch_end\n                        }, children);\n            }),\n          /* initialState */component[/* initialState */10],\n          /* retainedProps */component[/* retainedProps */11],\n          /* reducer */component[/* reducer */12],\n          /* jsElementWrapped */component[/* jsElementWrapped */13]\n        ];\n}\n\nexports.get_touch_position = get_touch_position;\nexports.component = component;\nexports.touchRecorder = touchRecorder;\nexports.get_swipe_direction = get_swipe_direction;\nexports.make = make;\n/* component Not a pure module */\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}